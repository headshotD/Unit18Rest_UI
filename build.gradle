plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "8.6"
}

repositories {
    mavenCentral()
}

def restAssuredVersion = "5.5.1",
    allureVersion = "2.21.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:5.10.0",
            "com.codeborne:selenide:7.0.4",
            "org.seleniumhq.selenium:selenium-java:4.15.0",
            "org.seleniumhq.selenium:selenium-remote-driver:4.15.0",
            "io.qameta.allure:allure-selenide:2.21.0",
            "org.aspectj:aspectjweaver:1.9.23",
            "org.assertj:assertj-core:3.25.3",
            'org.slf4j:slf4j-simple:2.0.7'
    )
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperty "USERNAME", System.getProperty("USERNAME", "")
    systemProperty "PASSWORD", System.getProperty("PASSWORD", "")
    systemProperty "BOOK_ISBN", System.getProperty("BOOK_ISBN", "")
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
task Api(type: Test) {
    useJUnitPlatform {
        includeTags("API")
    }
task UI(type: Test) {
        useJUnitPlatform {
            includeTags("UI")
        }
    }
}